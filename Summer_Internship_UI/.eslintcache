[{"C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\index.js":"1","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\App.js":"2","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\serviceWorker.js":"3","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\utils\\theme.js":"4","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\utils\\constants.js":"5","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\views\\CollectorDashboard.js":"6","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\Footer.js":"7","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\Header.js":"8","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\Body.js":"9","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\utils\\handleData.js":"10","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\addInvoiceDialog.js":"11","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\deleteInvoiceDialog.js":"12","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\editInvoiceDialog.js":"13","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\utils\\formatter.js":"14","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\correspondanceDialog.js":"15","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\errorpage.js":"16"},{"size":776,"mtime":1589950107326,"results":"17","hashOfConfig":"18"},{"size":1197,"mtime":1615577583587,"results":"19","hashOfConfig":"18"},{"size":5226,"mtime":1589284044061,"results":"20","hashOfConfig":"18"},{"size":475,"mtime":1591529983724,"results":"21","hashOfConfig":"18"},{"size":144,"mtime":1614693705292,"results":"22","hashOfConfig":"18"},{"size":3516,"mtime":1616042879376,"results":"23","hashOfConfig":"18"},{"size":1243,"mtime":1589331154773,"results":"24","hashOfConfig":"18"},{"size":1185,"mtime":1616506791074,"results":"25","hashOfConfig":"18"},{"size":19826,"mtime":1616588823207,"results":"26","hashOfConfig":"18"},{"size":988,"mtime":1615697685368,"results":"27","hashOfConfig":"18"},{"size":11484,"mtime":1616384874637,"results":"28","hashOfConfig":"18"},{"size":3586,"mtime":1616568693283,"results":"29","hashOfConfig":"18"},{"size":6120,"mtime":1616384918814,"results":"30","hashOfConfig":"18"},{"size":2199,"mtime":1616227395580,"results":"31","hashOfConfig":"18"},{"size":13198,"mtime":1616588839721,"results":"32","hashOfConfig":"18"},{"size":1766,"mtime":1616495272613,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"47kchk",{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\index.js",["78","79"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport theme from '../src/utils/theme';\r\nimport { withStyles, MuiThemeProvider } from '@material-ui/core/styles';\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n/*\r\nCRACKED BY ILLUMINATI\r\nTRUST US AND UNCOMMENT THIS CODE ONCE YOU SETUP YOUR REDUX STORE ;-)\r\n ReactDOM.render(\r\n   <Provider store={store}>\r\n     <MuiThemeProvider theme={theme}>\r\n       <App />\r\n     </MuiThemeProvider>\r\n   </Provider>,\r\n   document.getElementById('root')\r\n );\r\n*/\r\nserviceWorker.unregister();\r\n\r\n\r\n",["80","81"],"C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\App.js",["82","83","84","85"],"import React from 'react';\r\nimport './App.css';\r\nimport theme from '../src/utils/theme';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport CollectorDashboard from '../src/views/CollectorDashboard';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { ROLL_NUMBER } from '../src/utils/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    '*::-webkit-scrollbar': {\r\n      width: '0.4em',\r\n      height: '0.4em',\r\n    },\r\n    '*::-webkit-scrollbar-track': {\r\n      '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n    },\r\n    '*::-webkit-scrollbar-thumb': {\r\n      backgroundColor: '#6D7183',\r\n      outline: '1px solid slategrey',\r\n    },\r\n  },\r\n  mainBackground: {\r\n   background: theme.palette.primary.main,\r\n   backgroundColor:\"#58687E\",\r\n    height: '100vh',\r\n    width: '100vw',\r\n    overflow: 'hidden',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n}));\r\nconst App = () => {\r\n  console.log('theme', theme);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.mainBackground}>\r\n      <CollectorDashboard/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\serviceWorker.js",[],"C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\utils\\theme.js",[],"C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\utils\\constants.js",[],"C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\views\\CollectorDashboard.js",["86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React, { useState } from 'react';\r\nimport theme, { pxToVh, pxToVw } from '../utils/theme';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport { Typography } from '@material-ui/core';\r\nimport { InputBase, TextField, OutlinedInput, Button } from '@material-ui/core';\r\nimport Body from '../components/Body';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingLeft: '1vw',\r\n    paddingRight: '1vw',\r\n  },\r\n  textStyle1: {\r\n    color: '#FFFFFFA6',\r\n    fontSize: '2.5vw',\r\n    marginTop: '2vh',\r\n  },\r\n  textStyle2: {\r\n    color: '#FFFFFFA6',\r\n    fontSize: '1.5vw',\r\n  },\r\n  textfield: {\r\n    color: '#FFFFFFA6',\r\n    fontSize: '1.5vw',\r\n  },\r\n  nameInput: {\r\n    fontSize: '1vw',\r\n    color: '#FFFFFF',\r\n  },\r\n  notchedOutline: { borderWidth: '1px', borderColor: '#5DAAE0 !important' },\r\n  searchBtnStarted: {\r\n    marginTop: '8vh',\r\n    minWidth: '5vw',\r\n    minHeight: '2.188vw',\r\n    fontSize: '0.95vw',\r\n    border: 'solid 0.75px #3B617C',\r\n    // marginRight: '0.5rem',\r\n    alignSelf: 'center',\r\n    color: '#5DAAE0',\r\n    '&:hover': {\r\n      backgroundColor: '#5daae0',\r\n      color: 'white',\r\n    },\r\n  },\r\n  searchBtnDisabled: {\r\n    minWidth: '5vw',\r\n    minHeight: '2.188vw',\r\n    fontSize: '0.95vw',\r\n    border: 'solid 0.75px #3B617C',\r\n    // marginRight: '0.5rem',\r\n    alignSelf: 'center',\r\n    color: 'white !important',\r\n    background: '#FFFFFFa5',\r\n    '&:hover': {\r\n      cursor: 'default',\r\n      backgroundColor: '#FFFFFFa5',\r\n    },\r\n  },\r\n  hellotext: {\r\n    fontSize: '4vw',\r\n    color: '#FFFFFFA6',\r\n    height: '10vh',\r\n  },\r\n  hellotext1: {\r\n    fontSize: '2.5vw',\r\n    marginTop: '5vh',\r\n    padding: '1vh',\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#5DAAE0',\r\n  },\r\n  hellotext3: {\r\n    fontSize: '1vw',\r\n    marginTop: '5vh',\r\n    padding: '0.5vh',\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#5DAAE0',\r\n  },\r\n  hellotext2: {\r\n    fontSize: '1.2vw',\r\n    marginTop: '5vh',\r\n    padding: '1vh',\r\n    color: '#FFFFFF',\r\n    backgroundColor: '#5DAAE0',\r\n  },\r\n  hellotext4: {\r\n    fontSize: '1.5vw',\r\n    marginTop: '2vh',\r\n    padding: '1vh',\r\n    color: '#FFFFFF',\r\n  },\r\n  searchBtn: {\r\n    marginTop: '2vh',\r\n    minWidth: '5vw',\r\n    minHeight: '2.188vw',\r\n    fontSize: '0.95vw',\r\n    border: 'solid 0.75px #3B617C',\r\n    // marginRight: '0.5rem',\r\n    alignSelf: 'center',\r\n    color: '#5DAAE0',\r\n    '&:hover': {\r\n      backgroundColor: '#5daae0',\r\n      color: 'white',\r\n    },\r\n  },\r\n}));\r\n\r\nconst CollectorDashboard = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [started, setStarted] = useState(false);\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleGetStarted = (e) => {\r\n    if (started) setName('');\r\n    setStarted((prev) => !prev);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{\r\n      paddingLeft:\"1vh\",\r\n      paddingRight:\"1vh\",\r\n      backgroundColor:\"#58687E\"\r\n    }}>\r\n    <Header style = {{ marginTop:'0.5vh' }} />\r\n    <h4 style = {{\r\n      fontSize:'2.5vh',\r\n      // height : pxToVh(31),\r\n      // width: pxToVh(141),\r\n      marginTop:'1vh',\r\n      marginBottom:'1vh',\r\n      color:'white',\r\n      \r\n    }}>Invoice List</h4>\r\n\r\n\r\n\r\n    <Body style={{ marginTop:'1vh' }}/>\r\n\r\n    <Footer style={{ marginBottom:'1vh' }}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default CollectorDashboard;\r\n","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\Footer.js",["99","100","101"],"import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport theme, { pxToRem } from '../utils/theme';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  mainBackground: {\r\n    background: theme.palette.primary.main,\r\n    height: '100vh',\r\n    width: '100vw'\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: '100%',\r\n    background: '#252C48',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  },\r\n  titleName: { fontSize: pxToRem(30), color: 'white' },\r\n  subTitleName: {\r\n    fontSize: pxToRem(20),\r\n    color: 'white'\r\n  }\r\n});\r\nfunction Footer(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      style={{\r\n        display: 'flex',\r\n        marginRight: '5px',\r\n        justifyContent: 'flex-end',\r\n        height: \"4.5vh\",\r\n        alignItems: \"flex-end\"\r\n      }}\r\n    >\r\n      <Typography style={{ color: 'white' }}>\r\n        Copyright 2020 Highradius. All Rights Reserved.\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Footer);\r\n","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\Header.js",["102","103","104","105"],"import  React from 'react';\r\nimport hrcLogo from \"../assets/logo.svg\";\r\nimport abcLogo from \"../assets/companyLogo.svg\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport theme, { pxToVh, pxToVw } from '../utils/theme';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\n\r\nexport default function Header() {\r\n \r\n  return (\r\n    <div>\r\n      <Grid style={{\r\n      display:'flex',\r\n      backgroundColor:\"#58687E\",\r\n      fontSize:'2vh',\r\n      marginTop:pxToVh(20),\r\n      maxHeight:pxToVh(50),\r\n    \r\n      \r\n    }}>\r\n      <img src={abcLogo} alt=\"ABC Logo\" style={{\r\n        \r\n        width:pxToVw(44),\r\n        height:pxToVh(46)}}/>\r\n\r\n      <h2 style={{\r\n        \r\n        width:pxToVw(255),\r\n        height:pxToVh(50),\r\n        textAlign:'left',\r\n        color:'white',\r\n        opacity:\"1\"\r\n      }}>ABC Products</h2>\r\n\r\n\r\n      <img src={hrcLogo} alt = 'HRC Logog' style={{\r\n      marginLeft:\"30vh\",\r\n      width: pxToVw(235),\r\n      height: pxToVw(50),\r\n      maxHeight:pxToVh(50),\r\n      background: \"transparent  0% 0% no-repeat padding-box\",\r\n      opacity:\" 1\"}} />\r\n    </Grid>\r\n    \r\n    </div>\r\n\r\n  );\r\n}","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\Body.js",["106","107","108","109","110","111","112","113","114"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { pxToVh, pxToVw } from \"../utils/theme\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AddInvoiceDialog from \"../components/addInvoiceDialog\";\r\nimport EditDialog from \"../components/editInvoiceDialog\";\r\nimport formatter from \"../utils/formatter\";\r\nimport CorrDialog from \"../components/correspondanceDialog\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  InputAdornment,\r\n  Table,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Checkbox,\r\n  TableHead,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport axios from \"axios\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteDialog from \"./deleteInvoiceDialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Body() {\r\n  let [responseData, setResponseData] = React.useState([]);\r\n  let [isNext, isNextFunc] = React.useState(true);\r\n  let [pageCount, setCount] = React.useState(0);\r\n  let [searchPage, setSearchPage] = React.useState(0);\r\n  let [addInvoice, setAddInvoice] = React.useState(false);\r\n  let [editinvoice, setEditInvoice] = useState(false);\r\n  let [deleteInvoice, setDeleteInvoice] = useState(false);\r\n  let [search, setSearch] = React.useState(\"\");\r\n  let [check, setCheck] = useState(false);\r\n  let [checkData, setCheckData] = useState([]);\r\n  let [corres, setCorres] = useState(false);\r\n  let [corrData, setCorrData] = useState([]);\r\n  let [error, setError] = useState(null);\r\n  let [isEmpty, setIsEmpty] = useState(false);\r\n\r\n  let debouncer = null;\r\n\r\n  const loadData = (currPage) => {\r\n    if (pageCount !== -1) isNextFunc(true);\r\n    if (isNext) {\r\n      axios\r\n        .get(\r\n          `http://localhost:8080/1805464/searchinvoice?page=${currPage}&invoice_id=${search}&limit=10`\r\n        )\r\n        .then((response) => {\r\n          setResponseData([...responseData, ...response.data]);\r\n        })\r\n        .then((response) => {\r\n          if (response === null) {\r\n            setIsEmpty(true);\r\n          }\r\n        })\r\n        .then(() => {\r\n          search.length > 0\r\n            ? setSearchPage(searchPage + 1)\r\n            : setCount(currPage + 1);\r\n        })\r\n\r\n        .then(() => {\r\n          console.log(pageCount, isNext, responseData.length);\r\n        })\r\n\r\n        .catch((error) => {\r\n          setError(error);\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const loadMoreData = () => {\r\n    if (search.length > 0 && search !== \"\") {\r\n      loadData(searchPage);\r\n    } else {\r\n      loadData(pageCount);\r\n      console.log(typeof responseData);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (pageCount === 0) {\r\n      loadData(pageCount);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setResponseData([]);\r\n\r\n    clearTimeout(debouncer);\r\n    debouncer = setTimeout(() => {\r\n      loadData(0);\r\n    }, 1000);\r\n  }, [search]);\r\n\r\n  const handleAdd = () => {\r\n    setAddInvoice(!addInvoice);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setDeleteInvoice(!deleteInvoice);\r\n    console.log(deleteInvoice);\r\n  };\r\n\r\n  const handleCorres = () => {\r\n    setCorres(!corres);\r\n    console.log(corres);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditInvoice(!editinvoice);\r\n    console.log(editinvoice);\r\n  };\r\n\r\n  const onselectAllClicked = (event) => {\r\n    if (event.target.checked) {\r\n      const cData = responseData.map((x) => x.invoice_id);\r\n      setCheckData(cData);\r\n      console.log(checkData, check);\r\n      return;\r\n    }\r\n    console.log(checkData);\r\n    setCheckData([]);\r\n  };\r\n\r\n  const onSingleSelect = (event, invoice_id) => {\r\n    const selectedIndex = checkData.indexOf(invoice_id);\r\n    let newSelected = [];\r\n\r\n    setCorrData([]);\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(checkData, invoice_id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(checkData.slice(1));\r\n    } else if (selectedIndex === checkData.length - 1) {\r\n      newSelected = newSelected.concat(checkData.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        checkData.slice(0, selectedIndex),\r\n        checkData.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    responseData.forEach((row) => {\r\n      if (newSelected.includes(row.invoice_id)) {\r\n        setCorrData([...corrData, row]);\r\n      }\r\n      console.log(corrData);\r\n    });\r\n\r\n    setCheckData(newSelected);\r\n    console.log(checkData);\r\n  };\r\n\r\n  const isSelected = (invoice_id) => checkData.indexOf(invoice_id) !== -1;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        fontSize: \"2vh\",\r\n        height: \"77vh\",\r\n        width: \"219vh\",\r\n        paddingTop: \"1vh\",\r\n        backgroundColor: \"#273D49CC\",\r\n        borderRadius: \"1vh\",\r\n      }}\r\n    >\r\n      <Grid\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          width: \"210vh\",\r\n          height: \"5vh\",\r\n          marginLeft: \"1vh\",\r\n          marginRight: \"1vh\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{\r\n            fontSize: \"2vh\",\r\n            width: \"4.5vh\",\r\n            height: \"5vh\",\r\n            backgroundColor: checkData.length > 0 ? \"#14AFF1\" : \"#97A1A9\",\r\n          }}\r\n        >\r\n          Predict\r\n        </Button>\r\n        <Button\r\n          onClick={handleCorres}\r\n          disabled={checkData.length === 0}\r\n          variant=\"outlined\"\r\n          style={{\r\n            fontSize: \"2vh\",\r\n            width: \"35vh\",\r\n            height: \"5vh\",\r\n            marginLeft: \"1vh\",\r\n            borderColor: \"#97A1A9\",\r\n            color: \"#97A1A9\",\r\n          }}\r\n        >\r\n          View Correspondence\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          disabled={checkData.length > 0}\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAdd}\r\n          style={{\r\n            borderColor: \"#14AFF1\",\r\n            color: \"#FFFFFF\",\r\n            fontSize: \"2vh\",\r\n            width: \"4.5vh\",\r\n            height: \"5vh\",\r\n            marginLeft: \"70vh\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Add\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          disabled={!(checkData.length === 1)}\r\n          startIcon={<EditIcon />}\r\n          onClick={handleEdit}\r\n          style={{\r\n            borderColor: \"#97A1A9\",\r\n            color: \"#97A1A9\",\r\n            fontSize: \"2vh\",\r\n            width: \"4.5vh\",\r\n            height: \"5vh\",\r\n            marginLeft: \"1vh\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          disabled={checkData.length === 0}\r\n          onClick={handleDelete}\r\n          startIcon={<RemoveIcon />}\r\n          style={{\r\n            borderColor: \"#97A1A9\",\r\n            color: \"#97A1A9\",\r\n            fontSize: \"2vh\",\r\n            width: \"15vh\",\r\n            height: \"5vh\",\r\n            marginLeft: \"1vh\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Delete\r\n        </Button>\r\n        <TextField\r\n          style={{\r\n            marginLeft: \"2vh\",\r\n            fontSize: \"1vh\",\r\n            width: \"50vh\",\r\n            height: \"4vh\",\r\n          }}\r\n          placeholder=\"Search with invoice number\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n            console.log(e.target.value);\r\n            setResponseData([]);\r\n          }}\r\n          InputProps={{\r\n            style: {\r\n              height: \"5vh\",\r\n              borderColor: \"#14AFF1\",\r\n              color: \"#97A1A9\",\r\n            },\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <SearchIcon\r\n                  color=\"#FFFFFF\"\r\n                  style={{ height: \"4vh\", width: \"4vh\", marginLeft: \"1vh\" }}\r\n                />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <AddInvoiceDialog add={addInvoice} onChange={handleAdd} />\r\n        <DeleteDialog\r\n          deleteinvoice={deleteInvoice}\r\n          onChange={handleDelete}\r\n          invoice_ids={checkData}\r\n        />\r\n        <EditDialog\r\n          editinvoice={editinvoice}\r\n          onChange={handleEdit}\r\n          invoice_ids={checkData}\r\n        />\r\n        <CorrDialog\r\n          viewCorr={corres}\r\n          onChange={handleCorres}\r\n          invoice_ids={corrData}\r\n          size={corrData.length}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid>\r\n        <TableContainer>\r\n          <Table style={{ fontSize: \"3vh\", overflowY: \"auto\" }}>\r\n            <TableHead style={{ height: \"3vh\" }}>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\" style={{ borderBottom: \"none\" }}>\r\n                  <Checkbox\r\n                    indeterminate={\r\n                      checkData.length > 0 &&\r\n                      checkData.length < responseData.length\r\n                    }\r\n                    checked={\r\n                      responseData.length > 0 &&\r\n                      responseData.length === checkData.length\r\n                    }\r\n                    onChange={onselectAllClicked}\r\n                    inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n                  />\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  align=\"left\"\r\n                  size=\"medium\"\r\n                  key={\"customer_name\"}\r\n                  style={{\r\n                    color: \"#97A1A9\",\r\n                    fontSize: \"2.5vh\",\r\n                    width: pxToVw(128),\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Customer Name{\" \"}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"left\"\r\n                  size=\"medium\"\r\n                  key={\"customer_num\"}\r\n                  style={{\r\n                    color: \"#97A1A9\",\r\n                    fontSize: \"2.5vh\",\r\n                    width: pxToVw(95),\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Customer #{\" \"}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"right\"\r\n                  size=\"medium\"\r\n                  key={\"order_id\"}\r\n                  style={{\r\n                    color: \"#97A1A9\",\r\n                    fontSize: \"2.5vh\",\r\n                    width: pxToVw(128),\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Order ID{\" \"}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"right\"\r\n                  size=\"medium\"\r\n                  key={\"order_amt\"}\r\n                  style={{\r\n                    color: \"#97A1A9\",\r\n                    fontSize: \"2.5vh\",\r\n                    width: pxToVw(127),\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Invoice Amount\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"right\"\r\n                  size=\"medium\"\r\n                  key={\"due_date\"}\r\n                  style={{\r\n                    color: \"#97A1A9\",\r\n                    fontSize: \"2.5vh\",\r\n                    width: pxToVw(111),\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Due Date{\" \"}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"right\"\r\n                  size=\"medium\"\r\n                  key={\"predicted_date\"}\r\n                  style={{\r\n                    color: \"#97A1A9\",\r\n                    fontSize: \"2.5vh\",\r\n                    width: pxToVw(200),\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Predicted Payment Date{\" \"}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"left\"\r\n                  size=\"medium\"\r\n                  key={\"predicted_bucket\"}\r\n                  style={{\r\n                    color: \"#97A1A9\",\r\n                    fontSize: \"2.5vh\",\r\n                    width: pxToVw(198),\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Predicted Aging Bucket{\" \"}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"left\"\r\n                  size=\"medium\"\r\n                  key={\"notes\"}\r\n                  style={{\r\n                    color: \"#97A1A9\",\r\n                    fontSize: \"2.5vh\",\r\n                    width: pxToVw(184),\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Notes{\" \"}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Grid\r\n          id=\"scrollableGrid\"\r\n          style={{ overflow: \"auto\", height: pxToVh(350), paddingTop: \"1vh\" }}\r\n        >\r\n          <TableContainer>\r\n            <Table style={{ tableLayout: \"fixed\" }}>\r\n              {/* <TableBody style={{ overflowY:'hidden'}}> */}\r\n\r\n              <InfiniteScroll\r\n                dataLength={responseData.length}\r\n                next={loadMoreData}\r\n                hasMore={isNext}\r\n                scrollableTarget=\"scrollableGrid\"\r\n                loader={\r\n                  <Grid\r\n                    style={{\r\n                      height: \"80%\",\r\n                      marginLeft: \"45%\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </Grid>\r\n                }\r\n              >\r\n                {responseData.map((row, index) => {\r\n                  const isItemSelected = isSelected(row.invoice_id);\r\n                  const labelId = `table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      style={\r\n                        isItemSelected\r\n                          ? { background: \"#2A5368\" }\r\n                          : index % 2\r\n                          ? { background: \"#283A46\" }\r\n                          : {}\r\n                      }\r\n                      hover\r\n                      onClick={(event) => onSingleSelect(event, row.invoice_id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.invoice_id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell\r\n                        padding=\"checkbox\"\r\n                        style={{ borderBottom: \"none\" }}\r\n                      >\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          style={{\r\n                            color: isItemSelected ? \"#14AFF1\" : \"#97A1A9\",\r\n                          }}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        size=\"small\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          width: \"128px\",\r\n                          borderBottom: \"none\",\r\n                          fontSize: \"2vh\",\r\n                          fontWeight: \"lighter\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {row.name_cust}{\" \"}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        size=\"small\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          width: \"95px\",\r\n                          borderBottom: \"none\",\r\n                          fontSize: \"2vh\",\r\n                          fontWeight: \"lighter\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {row.cust_no}{\" \"}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"right\"\r\n                        size=\"small\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          width: \"124px\",\r\n                          borderBottom: \"none\",\r\n                          fontSize: \"2vh\",\r\n                          fontWeight: \"lighter\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {row.invoice_id}{\" \"}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"right\"\r\n                        size=\"small\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          width: \"105px\",\r\n                          borderBottom: \"none\",\r\n                          fontSize: \"2vh\",\r\n                          fontWeight: \"lighter\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {formatter(row.amount)}{\" \"}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"right\"\r\n                        size=\"small\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          width: \"110px\",\r\n                          borderBottom: \"none\",\r\n                          fontSize: \"2vh\",\r\n                          fontWeight: \"lighter\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {row.due_date}{\" \"}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"right\"\r\n                        size=\"small\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          width: \"198px\",\r\n                          borderBottom: \"none\",\r\n                          fontSize: \"2vh\",\r\n                          fontWeight: \"lighter\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        -{\" \"}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        size=\"small\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          width: \"191px\",\r\n                          borderBottom: \"none\",\r\n                          fontSize: \"2vh\",\r\n                          fontWeight: \"lighter\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        -{\" \"}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        size=\"small\"\r\n                        style={{\r\n                          color: \"white\",\r\n                          width: \"184px\",\r\n                          borderBottom: \"none\",\r\n                          fontSize: \"2vh\",\r\n                          fontWeight: \"lighter\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {row.notes}{\" \"}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </InfiniteScroll>\r\n              {/* </TableBody> */}\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\utils\\handleData.js",[],["115","116"],"C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\addInvoiceDialog.js",["117","118","119","120","121","122","123","124"],"import React from \"react\";\r\nimport { makeStyles, styled } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Typography,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  invoice_id: 0,\r\n  name_cust: \"\",\r\n  cust_no: \"\",\r\n  amount: 0,\r\n  due_date: \"\",\r\n  notes: \"\",\r\n};\r\n\r\nexport default function AddInvoiceDialog({ onChange, add }) {\r\n  const [info, setInfo] = React.useState(initialState);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedDate, setSelectedDate] = React.useState(\"\");\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    onChange(!add);\r\n  };\r\n\r\n  let disable =\r\n    info.name_cust === \"\" ||\r\n    info.cust_no === \"\" ||\r\n    info.invoice_id === 0 ||\r\n    info.amount === 0 ||\r\n    info.due_date === \"\";\r\n\r\n  const handleAddNew = () => {\r\n    const params = {\r\n      invoice_id: info.invoice_id,\r\n      name_cust: info.name_cust,\r\n      cust_no: info.cust_no,\r\n      amount: info.amount,\r\n      due_date: info.due_date,\r\n      notes: info.notes,\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        `http://localhost:8080/1805464/addinvoice?name_cust=${params.name_cust}&cust_no=${params.cust_no}&amount=${params.amount}&invoice_id=${params.invoice_id}&due_date=${params.due_date}&notes=${params.notes}`\r\n      )\r\n      .then(({ message }) => {\r\n        if (message === \"Success\") {\r\n          console.log(\"added\");\r\n          handleClick();\r\n          handleAdd();\r\n        } else {\r\n          setError(message);\r\n          handleClick();\r\n          handleAdd();\r\n        }\r\n        setInfo(initialState);\r\n      });\r\n    //  .then(\r\n    //    window.location.reload(true)\r\n    //  );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={add}\r\n        onClose={handleAdd}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <Grid\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            backgroundColor: \"#2A3E4C\",\r\n          }}\r\n        >\r\n          <DialogTitle\r\n            onClose={handleAdd}\r\n            style={{ backgroundColor: \"#2A3E4C\", color: \"white\" }}\r\n            id=\"form-dialog-title\"\r\n          >\r\n            <Typography> Add Invoice </Typography>\r\n          </DialogTitle>\r\n          <IconButton onClick={handleAdd} style={{ marginLeft: \"auto\" }}>\r\n            {\" \"}\r\n            <CloseIcon style={{ color: \"#C0C6CA\" }} />{\" \"}\r\n          </IconButton>\r\n        </Grid>\r\n        <DialogContent style={{ backgroundColor: \"#2A3E4C\" }}>\r\n          <Grid style={{ display: \"flex\" }}>\r\n            <Grid style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <Grid\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  color: \"#97A1A9\",\r\n                  width: \"250px\",\r\n                  height: \"45px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ width: \"130px\", fontSize: \"12px\", height: \"20px\" }}\r\n                >\r\n                  {\" \"}\r\n                  Customer Name{\" \"}\r\n                </Typography>\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  borderColor=\"#356680\"\r\n                  value={info.name_cust}\r\n                  error={info.name_cust === \"\"}\r\n                  onChange={(e) => {\r\n                    setInfo({ ...info, name_cust: e.target.value });\r\n                  }}\r\n                  InputProps={{\r\n                    style: {\r\n                      height: \"30px\",\r\n                      borderColor: \"#356680\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  width: \"250px\",\r\n                  height: \"45px\",\r\n                  color: \"#97A1A9\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ width: \"130px\", fontSize: \"12px\", height: \"20px\" }}\r\n                >\r\n                  {\" \"}\r\n                  Customer No.{\" \"}\r\n                </Typography>\r\n                <TextField\r\n                  type=\"number\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={info.cust_no}\r\n                  error={info.cust_no === \"\"}\r\n                  onChange={(e) => {\r\n                    setInfo({ ...info, cust_no: e.target.value });\r\n                  }}\r\n                  InputProps={{\r\n                    style: {\r\n                      height: \"30px\",\r\n                      borderColor: \"#356680\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  width: \"250px\",\r\n                  height: \"45px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{\r\n                    width: \"130px\",\r\n                    fontSize: \"12px\",\r\n                    height: \"20px\",\r\n                    color: \"#97A1A9\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Invoice No.{\" \"}\r\n                </Typography>\r\n                <TextField\r\n                  type=\"number\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={info.invoice_id}\r\n                  error={info.invoice_id === 0}\r\n                  onChange={(e) => {\r\n                    setInfo({ ...info, invoice_id: e.target.value });\r\n                  }}\r\n                  InputProps={{\r\n                    style: {\r\n                      height: \"30px\",\r\n                      borderColor: \"#356680\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  width: \"250px\",\r\n                  height: \"45px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{\r\n                    width: \"130px\",\r\n                    fontSize: \"12px\",\r\n                    height: \"20px\",\r\n                    color: \"#97A1A9\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Invoice Amount{\" \"}\r\n                </Typography>\r\n                <TextField\r\n                  type=\"number\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={info.amount}\r\n                  error={info.amount === 0}\r\n                  onChange={(e) => {\r\n                    setInfo({ ...info, amount: e.target.value });\r\n                  }}\r\n                  InputProps={{\r\n                    style: {\r\n                      height: \"30px\",\r\n                      borderColor: \"#356680\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid>\r\n              <Grid>\r\n                <Grid\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginLeft: \"10px\",\r\n                    width: \"300px\",\r\n                    height: \"45px\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    variant=\"subtitle1\"\r\n                    style={{\r\n                      width: \"130px\",\r\n                      fontSize: \"12px\",\r\n                      height: \"20px\",\r\n                      color: \"#97A1A9\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Due date{\" \"}\r\n                  </Typography>\r\n                  <TextField\r\n                    type=\"date\"\r\n                    required\r\n                    variant=\"outlined\"\r\n                    value={info.due_date}\r\n                    error={info.due_date === \"\"}\r\n                    onChange={(e) => {\r\n                      setInfo({ ...info, due_date: e.target.value });\r\n                    }}\r\n                    InputProps={{\r\n                      style: {\r\n                        height: \"30px\",\r\n                        marginLeft: \"-30px\",\r\n                        borderColor: \"#356680\",\r\n                        color: \"white\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    marginLeft: \"10px\",\r\n                    width: \"300px\",\r\n                    height: \"45px\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    variant=\"subtitle1\"\r\n                    style={{\r\n                      width: \"130px\",\r\n                      fontSize: \"12px\",\r\n                      height: \"20px\",\r\n                      color: \"#97A1A9\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Notes{\" \"}\r\n                  </Typography>\r\n                  <TextField\r\n                    multiline\r\n                    rows={5}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    value={info.notes}\r\n                    onChange={(e) => {\r\n                      setInfo({ ...info, notes: e.target.value });\r\n                    }}\r\n                    InputProps={{\r\n                      style: {\r\n                        marginLeft: \"-30px\",\r\n                        borderColor: \"#356680\",\r\n                        color: \"white\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions style={{ backgroundColor: \"#2A3E4C\" }}>\r\n          <Button\r\n            onClick={handleAdd}\r\n            style={{ marginRight: \"auto\", color: \"#14AFF1\" }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => {\r\n              setInfo(initialState);\r\n            }}\r\n            color=\"#14AFF1\"\r\n            style={{ borderColor: \"#14AFF1\", color: \"#14AFF1\" }}\r\n          >\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            disabled={disable}\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              handleAddNew();\r\n              window.location.reload();\r\n            }}\r\n            style={{ backgroundColor: disable ? \"#97A1A9\" : \"#14AFF1\" }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\deleteInvoiceDialog.js",["125","126","127","128","129","130","131","132","133","134","135"],"import React from \"react\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle as MuiDialogTitle,\r\n  DialogContent as MuiDialogContent,\r\n  DialogActions as MuiDialogActions,\r\n  IconButton,\r\n  Typography,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n\r\nconst initialDeleteArray = [];\r\n\r\nexport default function DeleteDialog({ onChange, deleteinvoice, invoice_ids }) {\r\n  let [open, setOpen] = React.useState(false);\r\n\r\n  let [error, setError] = React.useState(null);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    onChange(!deleteinvoice);\r\n  };\r\n\r\n  const handleDeleteInvoice = () => {\r\n    invoice_ids.map((id, index) => {\r\n      axios\r\n        .get(`http://localhost:8080/1805464/deleteinvoice?invoice_id=${id}`)\r\n        .then(({ message }) => {\r\n          if (message === \"Success\") {\r\n            console.log(\"deleted\");\r\n            handleClick();\r\n            handleDelete();\r\n          } else {\r\n            setError(message);\r\n            handleClick();\r\n            handleDelete();\r\n          }\r\n        });\r\n    });\r\n\r\n    window.location.reload(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={deleteinvoice}\r\n        onClose={handleDelete}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <Grid\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            backgroundColor: \"#2A3E4C\",\r\n          }}\r\n        >\r\n          <DialogTitle\r\n            onClose={handleDelete}\r\n            style={{ color: \"white\" }}\r\n            id=\"form-dialog-title\"\r\n          >\r\n            Delete Record(s)?\r\n          </DialogTitle>\r\n          <IconButton style={{ marginLeft: \"auto\" }} onClick={handleDelete}>\r\n            {\" \"}\r\n            <CloseIcon style={{ color: \"#C0C6CA\" }} />{\" \"}\r\n          </IconButton>\r\n        </Grid>\r\n        <DialogContent style={{ backgroundColor: \"#2A3E4C\" }}>\r\n          <Typography style={{ color: \"#C0C6CA\" }}>\r\n            You'll lose your record(s) after this action. We can't recover them\r\n            once you delete.\r\n          </Typography>\r\n          <Grid style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <Typography> Are you sure you want to </Typography>\r\n\r\n            <Typography style={{ color: \"#FF5E5E\", marginLeft: \"4px\" }}>\r\n              {\" \"}\r\n              permanently delete\r\n            </Typography>\r\n            <Typography style={{ marginLeft: \"4px\" }}>them?</Typography>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions style={{ backgroundColor: \"#2A3E4C\" }}>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            onClick={handleDelete}\r\n            color=\"#14AFF1\"\r\n            style={{ borderColor: \"#14AFF1\", color: \"#14AFF1\" }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              handleDeleteInvoice();\r\n            }}\r\n            style={{ backgroundColor: \"#14AFF1\" }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\editInvoiceDialog.js",["136","137","138","139","140","141","142","143","144","145"],"import React from \"react\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle as MuiDialogTitle,\r\n  DialogContent as MuiDialogContent,\r\n  DialogActions as MuiDialogActions,\r\n  IconButton,\r\n  Typography,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n\r\nconst initialEditArray = [];\r\n\r\nconst initialState = {\r\n  amount: 0.0,\r\n  notes: \"\",\r\n  id: 0,\r\n};\r\nexport default function EditDialog({ onChange, editinvoice, invoice_ids }) {\r\n  const [info, setInfo] = React.useState(initialState);\r\n  let [open, setOpen] = React.useState(false);\r\n  let [invoiceArray, setInvoiceArray] = React.useState(initialEditArray);\r\n  let [error, setError] = React.useState(null);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    onChange(!editinvoice);\r\n  };\r\n  const handleEditNew = () => {\r\n    const params = {\r\n      amount: info.amount,\r\n      notes: info.notes,\r\n      id: invoice_ids,\r\n    };\r\n\r\n    axios\r\n      .get(\r\n        `http://localhost:8080/1805464/editinvoice?invoice_id=${params.id}&amount=${params.amount}&notes=${params.notes}`\r\n      )\r\n      .then(({ message }) => {\r\n        if (message === \"Success\") {\r\n          console.log(\"edited\");\r\n          handleClick();\r\n          handleEdit();\r\n        } else {\r\n          setError(message);\r\n          handleClick();\r\n          handleEdit();\r\n        }\r\n        setInfo(initialState);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={editinvoice}\r\n        onClose={handleEdit}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <Grid\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            backgroundColor: \"#2A3E4C\",\r\n          }}\r\n        >\r\n          <DialogTitle\r\n            onClose={handleEdit}\r\n            style={{ color: \"white\" }}\r\n            id=\"form-dialog-title\"\r\n          >\r\n            Edit Invoice\r\n          </DialogTitle>\r\n          <IconButton style={{ marginLeft: \"auto\" }} onClick={handleEdit}>\r\n            {\" \"}\r\n            <CloseIcon style={{ color: \"#C0C6CA\" }} />{\" \"}\r\n          </IconButton>\r\n        </Grid>\r\n        <DialogContent style={{ backgroundColor: \"#2A3E4C\" }}>\r\n          <Grid style={{ display: \"flex\" }}>\r\n            <Grid\r\n              alignItems=\"left\"\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <Grid\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  width: \"250px\",\r\n                  height: \"45px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{\r\n                    width: \"130px\",\r\n                    fontSize: \"12px\",\r\n                    height: \"20px\",\r\n                    color: \"#97A1A9\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Invoice Amount{\" \"}\r\n                </Typography>\r\n                <TextField\r\n                  type=\"number\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={info.amount}\r\n                  onChange={(e) => {\r\n                    setInfo({ ...info, amount: e.target.value });\r\n                  }}\r\n                  InputProps={{\r\n                    style: {\r\n                      height: \"30px\",\r\n                      borderColor: \"#356680\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  marginLeft: \"10px\",\r\n                  width: \"300px\",\r\n                  height: \"45px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{\r\n                    width: \"130px\",\r\n                    fontSize: \"12px\",\r\n                    height: \"20px\",\r\n                    color: \"#97A1A9\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Notes{\" \"}\r\n                </Typography>\r\n                <TextField\r\n                  multiline\r\n                  rows={5}\r\n                  required\r\n                  variant=\"outlined\"\r\n                  value={info.notes}\r\n                  onChange={(e) => {\r\n                    setInfo({ ...info, notes: e.target.value });\r\n                  }}\r\n                  InputProps={{\r\n                    style: {\r\n                      marginLeft: \"-30px\",\r\n                      borderColor: \"#356680\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions style={{ backgroundColor: \"#2A3E4C\" }}>\r\n          <Button\r\n            onClick={handleEdit}\r\n            style={{ marginRight: \"auto\", color: \"#14AFF1\" }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => {\r\n              setInfo(initialState);\r\n            }}\r\n            color=\"#14AFF1\"\r\n            style={{ borderColor: \"#14AFF1\", color: \"#14AFF1\" }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              handleEditNew();\r\n              window.location.reload();\r\n            }}\r\n            style={{ backgroundColor: \"#14AFF1\" }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\utils\\formatter.js",[],"C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\correspondanceDialog.js",["146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport formatter from \"../utils/formatter\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TablePagination,\r\n  TableRow,\r\n  Checkbox,\r\n  TableHead,\r\n  Tab,\r\n  TableSortLabel,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CorrDialog({ onChange, viewCorr, invoice_ids, size }) {\r\n  let [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCorr = () => {\r\n    onChange(!viewCorr);\r\n  };\r\n\r\n  let totalAmount = 0;\r\n\r\n  let len;\r\n  let account_name;\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={\"lg\"}\r\n        open={viewCorr}\r\n        onClose={handleCorr}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle\r\n          id=\"max-width-dialog-title\"\r\n          style={{ background: \"#2A3E4C\" }}\r\n        >\r\n          <Grid\r\n            style={{\r\n              alignItems: \"center\",\r\n              background: \"#2A3E4C\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Typography style={{ color: \"#FFFFFF\", marginRight: \"auto\" }}>\r\n              View Correspondance ({size})\r\n            </Typography>\r\n            <Typography style={{ color: \"#FFFFFF\", marginLeft: \"auto\" }}>\r\n              {\" \"}\r\n              View:\r\n            </Typography>\r\n\r\n            <Select\r\n              style={{\r\n                height: \"35px\",\r\n                width: \"183px\",\r\n                background: \"#2A3E4C\",\r\n                marginLeft: \"5px\",\r\n                borderColor: \"#356680\",\r\n                color: \"white\",\r\n              }}\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem style={{ background: \"#2A3E4C\", coloir: \"white\" }}>\r\n                Template 1\r\n              </MenuItem>\r\n              <MenuItem style={{ background: \"#2A3E4C\", color: \"white\" }}>\r\n                Template 2\r\n              </MenuItem>\r\n            </Select>\r\n\r\n            <IconButton>\r\n              {\" \"}\r\n              <CloseIcon style={{ color: \"#C0C6CA\" }} />{\" \"}\r\n            </IconButton>\r\n          </Grid>\r\n        </DialogTitle>\r\n\r\n        <DialogContent style={{ background: \"#2A3E4C\", marginTop: \"-20px\" }}>\r\n          <Grid style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <Typography\r\n              style={{\r\n                fontWeight: \"lighter\",\r\n                color: \"#97A1A9\",\r\n                fontSize: \"15px\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Subject:\r\n            </Typography>\r\n            <Typography\r\n              style={{\r\n                marginLeft: \"5px\",\r\n                fontWeight: \"bold\",\r\n                color: \"#97A1A9\",\r\n                fontSize: \"15px\",\r\n              }}\r\n            >\r\n              Invoice Details-{account_name}{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"lighter\",\r\n              color: \"#97A1A9\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            Dear Sir/Madam,{\" \"}\r\n          </Typography>\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"lighter\",\r\n              color: \"#97A1A9\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            Greetings!{\" \"}\r\n          </Typography>\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"lighter\",\r\n              color: \"#97A1A9\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            This is to remind you that there are one or more open invoices on\r\n            your account. lease provide at your earliest convenience an update\r\n            on the payment details or clarify the reason for the delay. If you\r\n            have any specific issue with the invoice(s), please let us know so\r\n            that we can address it to the correct Department. Please find the\r\n            details of the invoices below:\r\n          </Typography>\r\n          <Table>\r\n            <TableHead style={{ height: \"3vh\" }}>\r\n              <TableCell\r\n                align=\"left\"\r\n                size=\"medium\"\r\n                key={\"customer_name\"}\r\n                style={{ color: \"#97A1A9\", fontSize: \"2.5vh\", width: \"128px\" }}\r\n              >\r\n                {\" \"}\r\n                Invoice Number{\" \"}\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                size=\"medium\"\r\n                key={\"customer_num\"}\r\n                style={{ color: \"#97A1A9\", fontSize: \"2.5vh\", width: \"95px\" }}\r\n              >\r\n                {\" \"}\r\n                PO Number{\" \"}\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"right\"\r\n                size=\"medium\"\r\n                key={\"order_id\"}\r\n                style={{ color: \"#97A1A9\", fontSize: \"2.5vh\", width: \"128px\" }}\r\n              >\r\n                {\" \"}\r\n                Invoice Date{\" \"}\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"right\"\r\n                size=\"medium\"\r\n                key={\"order_amt\"}\r\n                style={{ color: \"#97A1A9\", fontSize: \"2.5vh\", width: \"127px\" }}\r\n              >\r\n                {\" \"}\r\n                Due Date\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"right\"\r\n                size=\"medium\"\r\n                key={\"due_date\"}\r\n                style={{ color: \"#97A1A9\", fontSize: \"2.5vh\", width: \"111px\" }}\r\n              >\r\n                {\" \"}\r\n                Order Currency{\" \"}\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"right\"\r\n                size=\"medium\"\r\n                key={\"predicted_date\"}\r\n                style={{ color: \"#97A1A9\", fontSize: \"2.5vh\", width: \"200px\" }}\r\n              >\r\n                {\" \"}\r\n                Open Amount{\" \"}\r\n              </TableCell>\r\n            </TableHead>\r\n          </Table>\r\n          <Table style={{ overflowY: \"scroll\" }}>\r\n            <TableBody style={{ tableLayout: \"fixed\" }}>\r\n              {invoice_ids.map((row, index) => {\r\n                totalAmount = totalAmount + row.amount;\r\n\r\n                return (\r\n                  <TableRow\r\n                    style={index % 2 ? { background: \"#283A46\" } : {}}\r\n                    hover\r\n                    tabIndex={-1}\r\n                    key={row.invoice_id}\r\n                  >\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      size=\"small\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        width: \"128px\",\r\n                        borderBottom: \"none\",\r\n                        fontSize: \"2vh\",\r\n                        fontWeight: \"lighter\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {row.invoice_id}{\" \"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      size=\"small\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        width: \"95px\",\r\n                        borderBottom: \"none\",\r\n                        fontSize: \"2vh\",\r\n                        fontWeight: \"lighter\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {row.invoice_id}{\" \"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"right\"\r\n                      size=\"small\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        width: \"124px\",\r\n                        borderBottom: \"none\",\r\n                        fontSize: \"2vh\",\r\n                        fontWeight: \"lighter\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {row.doc_date}{\" \"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"right\"\r\n                      size=\"small\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        width: \"105px\",\r\n                        borderBottom: \"none\",\r\n                        fontSize: \"2vh\",\r\n                        fontWeight: \"lighter\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {row.due_date}{\" \"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"right\"\r\n                      size=\"small\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        width: \"110px\",\r\n                        borderBottom: \"none\",\r\n                        fontSize: \"2vh\",\r\n                        fontWeight: \"lighter\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {row.currency}{\" \"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"right\"\r\n                      size=\"small\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        width: \"184px\",\r\n                        borderBottom: \"none\",\r\n                        fontSize: \"2vh\",\r\n                        fontWeight: \"lighter\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {formatter(row.amount)}{\" \"}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n\r\n          <Typography\r\n            style={{\r\n              marginTop: \"15px\",\r\n              fontWeight: \"bold\",\r\n              color: \"#97A1A9\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            Total Amount To Be Paid: ${formatter(totalAmount)}\r\n          </Typography>\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"lighter\",\r\n              color: \"#97A1A9\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            In case you have already made a payment for the above items, please\r\n            send us the details to ensure the payment is posted. Let us know if\r\n            we can be of any further assistance. Looking forward to hearing from\r\n            you.\r\n          </Typography>\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"lighter\",\r\n              color: \"#97A1A9\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            Kind Regards,\r\n          </Typography>\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"lighter\",\r\n              color: \"#97A1A9\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            [Sender’s First Name][Sender’s Last Name]{\" \"}\r\n          </Typography>\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"lighter\",\r\n              color: \"#97A1A9\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            Phone : [Sender’s contact number]{\" \"}\r\n          </Typography>\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"lighter\",\r\n              color: \"#97A1A9\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            Fax : [If any]{\" \"}\r\n          </Typography>\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"lighter\",\r\n              color: \"#97A1A9\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            Email : [Sender’s Email Address]{\" \"}\r\n          </Typography>\r\n          <Typography\r\n            style={{\r\n              fontWeight: \"lighter\",\r\n              color: \"#97A1A9\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            Company Name[Sender’s Company Name]\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions style={{ backgroundColor: \"#2A3E4C\" }}>\r\n          <Button\r\n            onClick={handleCorr}\r\n            style={{ marginleft: \"auto\", color: \"#14AFF1\" }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" style={{ backgroundColor: \"#14AFF1\" }}>\r\n            Download\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\anike\\Documents\\Documents\\HRC\\hrc_backend\\Summer_Internship_UI\\src\\components\\errorpage.js",["160","161","162","163","164","165","166","167","168","169","170"],{"ruleId":"171","severity":1,"message":"172","line":6,"column":10,"nodeType":"173","messageId":"174","endLine":6,"endColumn":18},{"ruleId":"171","severity":1,"message":"175","line":8,"column":10,"nodeType":"173","messageId":"174","endLine":8,"endColumn":20},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"171","severity":1,"message":"180","line":6,"column":27,"nodeType":"173","messageId":"174","endLine":6,"endColumn":33},{"ruleId":"171","severity":1,"message":"181","line":6,"column":35,"nodeType":"173","messageId":"174","endLine":6,"endColumn":40},{"ruleId":"171","severity":1,"message":"182","line":6,"column":42,"nodeType":"173","messageId":"174","endLine":6,"endColumn":48},{"ruleId":"171","severity":1,"message":"183","line":7,"column":10,"nodeType":"173","messageId":"174","endLine":7,"endColumn":21},{"ruleId":"171","severity":1,"message":"184","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":13},{"ruleId":"171","severity":1,"message":"185","line":2,"column":17,"nodeType":"173","messageId":"174","endLine":2,"endColumn":23},{"ruleId":"171","severity":1,"message":"186","line":2,"column":25,"nodeType":"173","messageId":"174","endLine":2,"endColumn":31},{"ruleId":"171","severity":1,"message":"187","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":12},{"ruleId":"171","severity":1,"message":"188","line":7,"column":10,"nodeType":"173","messageId":"174","endLine":7,"endColumn":20},{"ruleId":"171","severity":1,"message":"189","line":8,"column":10,"nodeType":"173","messageId":"174","endLine":8,"endColumn":19},{"ruleId":"171","severity":1,"message":"190","line":8,"column":21,"nodeType":"173","messageId":"174","endLine":8,"endColumn":30},{"ruleId":"171","severity":1,"message":"191","line":8,"column":32,"nodeType":"173","messageId":"174","endLine":8,"endColumn":45},{"ruleId":"171","severity":1,"message":"192","line":8,"column":47,"nodeType":"173","messageId":"174","endLine":8,"endColumn":53},{"ruleId":"171","severity":1,"message":"193","line":114,"column":10,"nodeType":"173","messageId":"174","endLine":114,"endColumn":14},{"ruleId":"171","severity":1,"message":"194","line":117,"column":9,"nodeType":"173","messageId":"174","endLine":117,"endColumn":25},{"ruleId":"171","severity":1,"message":"195","line":121,"column":9,"nodeType":"173","messageId":"174","endLine":121,"endColumn":25},{"ruleId":"171","severity":1,"message":"196","line":126,"column":9,"nodeType":"173","messageId":"174","endLine":126,"endColumn":16},{"ruleId":"171","severity":1,"message":"197","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":13},{"ruleId":"171","severity":1,"message":"184","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":13},{"ruleId":"171","severity":1,"message":"196","line":32,"column":11,"nodeType":"173","messageId":"174","endLine":32,"endColumn":18},{"ruleId":"171","severity":1,"message":"197","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":13},{"ruleId":"171","severity":1,"message":"184","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":13},{"ruleId":"171","severity":1,"message":"175","line":6,"column":10,"nodeType":"173","messageId":"174","endLine":6,"endColumn":20},{"ruleId":"171","severity":1,"message":"188","line":7,"column":10,"nodeType":"173","messageId":"174","endLine":7,"endColumn":20},{"ruleId":"171","severity":1,"message":"198","line":1,"column":38,"nodeType":"173","messageId":"174","endLine":1,"endColumn":53},{"ruleId":"171","severity":1,"message":"199","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":24},{"ruleId":"171","severity":1,"message":"200","line":27,"column":10,"nodeType":"173","messageId":"174","endLine":27,"endColumn":20},{"ruleId":"171","severity":1,"message":"188","line":29,"column":8,"nodeType":"173","messageId":"174","endLine":29,"endColumn":18},{"ruleId":"171","severity":1,"message":"201","line":40,"column":15,"nodeType":"173","messageId":"174","endLine":40,"endColumn":23},{"ruleId":"171","severity":1,"message":"202","line":44,"column":8,"nodeType":"173","messageId":"174","endLine":44,"endColumn":13},{"ruleId":"171","severity":1,"message":"203","line":45,"column":8,"nodeType":"173","messageId":"174","endLine":45,"endColumn":15},{"ruleId":"204","severity":1,"message":"205","line":94,"column":6,"nodeType":"206","endLine":94,"endColumn":8,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":100,"column":17,"nodeType":"209","endLine":102,"endColumn":13},{"ruleId":"176","replacedBy":"210"},{"ruleId":"178","replacedBy":"211"},{"ruleId":"171","severity":1,"message":"200","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":20},{"ruleId":"171","severity":1,"message":"212","line":2,"column":22,"nodeType":"173","messageId":"174","endLine":2,"endColumn":28},{"ruleId":"171","severity":1,"message":"213","line":13,"column":3,"nodeType":"173","messageId":"174","endLine":13,"endColumn":11},{"ruleId":"171","severity":1,"message":"214","line":30,"column":10,"nodeType":"173","messageId":"174","endLine":30,"endColumn":14},{"ruleId":"171","severity":1,"message":"215","line":31,"column":10,"nodeType":"173","messageId":"174","endLine":31,"endColumn":22},{"ruleId":"171","severity":1,"message":"216","line":31,"column":24,"nodeType":"173","messageId":"174","endLine":31,"endColumn":39},{"ruleId":"171","severity":1,"message":"202","line":32,"column":10,"nodeType":"173","messageId":"174","endLine":32,"endColumn":15},{"ruleId":"171","severity":1,"message":"217","line":38,"column":9,"nodeType":"173","messageId":"174","endLine":38,"endColumn":20},{"ruleId":"171","severity":1,"message":"218","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":25},{"ruleId":"171","severity":1,"message":"190","line":8,"column":3,"nodeType":"173","messageId":"174","endLine":8,"endColumn":12},{"ruleId":"171","severity":1,"message":"219","line":11,"column":18,"nodeType":"173","messageId":"174","endLine":11,"endColumn":32},{"ruleId":"171","severity":1,"message":"220","line":12,"column":20,"nodeType":"173","messageId":"174","endLine":12,"endColumn":36},{"ruleId":"171","severity":1,"message":"221","line":13,"column":20,"nodeType":"173","messageId":"174","endLine":13,"endColumn":36},{"ruleId":"171","severity":1,"message":"213","line":16,"column":3,"nodeType":"173","messageId":"174","endLine":16,"endColumn":11},{"ruleId":"171","severity":1,"message":"222","line":22,"column":7,"nodeType":"173","messageId":"174","endLine":22,"endColumn":25},{"ruleId":"171","severity":1,"message":"214","line":25,"column":8,"nodeType":"173","messageId":"174","endLine":25,"endColumn":12},{"ruleId":"171","severity":1,"message":"202","line":27,"column":8,"nodeType":"173","messageId":"174","endLine":27,"endColumn":13},{"ruleId":"171","severity":1,"message":"217","line":33,"column":9,"nodeType":"173","messageId":"174","endLine":33,"endColumn":20},{"ruleId":"223","severity":1,"message":"224","line":42,"column":33,"nodeType":"225","messageId":"226","endLine":42,"endColumn":35},{"ruleId":"171","severity":1,"message":"218","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":25},{"ruleId":"171","severity":1,"message":"219","line":11,"column":18,"nodeType":"173","messageId":"174","endLine":11,"endColumn":32},{"ruleId":"171","severity":1,"message":"220","line":12,"column":20,"nodeType":"173","messageId":"174","endLine":12,"endColumn":36},{"ruleId":"171","severity":1,"message":"221","line":13,"column":20,"nodeType":"173","messageId":"174","endLine":13,"endColumn":36},{"ruleId":"171","severity":1,"message":"213","line":16,"column":3,"nodeType":"173","messageId":"174","endLine":16,"endColumn":11},{"ruleId":"171","severity":1,"message":"214","line":30,"column":8,"nodeType":"173","messageId":"174","endLine":30,"endColumn":12},{"ruleId":"171","severity":1,"message":"227","line":31,"column":8,"nodeType":"173","messageId":"174","endLine":31,"endColumn":20},{"ruleId":"171","severity":1,"message":"228","line":31,"column":22,"nodeType":"173","messageId":"174","endLine":31,"endColumn":37},{"ruleId":"171","severity":1,"message":"202","line":32,"column":8,"nodeType":"173","messageId":"174","endLine":32,"endColumn":13},{"ruleId":"171","severity":1,"message":"217","line":38,"column":9,"nodeType":"173","messageId":"174","endLine":38,"endColumn":20},{"ruleId":"171","severity":1,"message":"229","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"200","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":20},{"ruleId":"171","severity":1,"message":"218","line":7,"column":8,"nodeType":"173","messageId":"174","endLine":7,"endColumn":25},{"ruleId":"171","severity":1,"message":"230","line":11,"column":8,"nodeType":"173","messageId":"174","endLine":11,"endColumn":18},{"ruleId":"171","severity":1,"message":"231","line":20,"column":3,"nodeType":"173","messageId":"174","endLine":20,"endColumn":17},{"ruleId":"171","severity":1,"message":"232","line":21,"column":3,"nodeType":"173","messageId":"174","endLine":21,"endColumn":18},{"ruleId":"171","severity":1,"message":"233","line":23,"column":3,"nodeType":"173","messageId":"174","endLine":23,"endColumn":11},{"ruleId":"171","severity":1,"message":"234","line":25,"column":3,"nodeType":"173","messageId":"174","endLine":25,"endColumn":6},{"ruleId":"171","severity":1,"message":"235","line":26,"column":3,"nodeType":"173","messageId":"174","endLine":26,"endColumn":17},{"ruleId":"171","severity":1,"message":"236","line":28,"column":8,"nodeType":"173","messageId":"174","endLine":28,"endColumn":13},{"ruleId":"171","severity":1,"message":"214","line":31,"column":8,"nodeType":"173","messageId":"174","endLine":31,"endColumn":12},{"ruleId":"171","severity":1,"message":"237","line":33,"column":9,"nodeType":"173","messageId":"174","endLine":33,"endColumn":20},{"ruleId":"171","severity":1,"message":"217","line":37,"column":9,"nodeType":"173","messageId":"174","endLine":37,"endColumn":20},{"ruleId":"171","severity":1,"message":"238","line":47,"column":7,"nodeType":"173","messageId":"174","endLine":47,"endColumn":10},{"ruleId":"171","severity":1,"message":"239","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":21},{"ruleId":"171","severity":1,"message":"240","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":21},{"ruleId":"171","severity":1,"message":"218","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":25},{"ruleId":"171","severity":1,"message":"241","line":6,"column":8,"nodeType":"173","messageId":"174","endLine":6,"endColumn":19},{"ruleId":"171","severity":1,"message":"190","line":9,"column":3,"nodeType":"173","messageId":"174","endLine":9,"endColumn":12},{"ruleId":"171","severity":1,"message":"219","line":12,"column":18,"nodeType":"173","messageId":"174","endLine":12,"endColumn":32},{"ruleId":"171","severity":1,"message":"220","line":13,"column":20,"nodeType":"173","messageId":"174","endLine":13,"endColumn":36},{"ruleId":"171","severity":1,"message":"221","line":14,"column":20,"nodeType":"173","messageId":"174","endLine":14,"endColumn":36},{"ruleId":"171","severity":1,"message":"242","line":15,"column":3,"nodeType":"173","messageId":"174","endLine":15,"endColumn":13},{"ruleId":"171","severity":1,"message":"213","line":17,"column":3,"nodeType":"173","messageId":"174","endLine":17,"endColumn":11},{"ruleId":"171","severity":1,"message":"243","line":19,"column":19,"nodeType":"173","messageId":"174","endLine":19,"endColumn":28},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","no-native-reassign",["244"],"no-negated-in-lhs",["245"],"'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ROLL_NUMBER' is defined but never used.","'theme' is defined but never used.","'pxToVh' is defined but never used.","'pxToVw' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'InputBase' is defined but never used.","'TextField' is defined but never used.","'OutlinedInput' is defined but never used.","'Button' is defined but never used.","'name' is assigned a value but never used.","'handleNameChange' is assigned a value but never used.","'handleGetStarted' is assigned a value but never used.","'classes' is assigned a value but never used.","'Paper' is defined but never used.","'useLayoutEffect' is defined but never used.","'ErrorOutlineIcon' is defined but never used.","'makeStyles' is defined but never used.","'setCheck' is assigned a value but never used.","'error' is assigned a value but never used.","'isEmpty' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadData' and 'pageCount'. Either include them or remove the dependency array.","ArrayExpression",["246"],"Assignments to the 'debouncer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["244"],["245"],"'styled' is defined but never used.","'Snackbar' is defined but never used.","'open' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'setSelectedDate' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'DialogContentText' is defined but never used.","'MuiDialogTitle' is defined but never used.","'MuiDialogContent' is defined but never used.","'MuiDialogActions' is defined but never used.","'initialDeleteArray' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'invoiceArray' is assigned a value but never used.","'setInvoiceArray' is assigned a value but never used.","'useEffect' is defined but never used.","'InputLabel' is defined but never used.","'TableContainer' is defined but never used.","'TablePagination' is defined but never used.","'Checkbox' is defined but never used.","'Tab' is defined but never used.","'TableSortLabel' is defined but never used.","'axios' is defined but never used.","'handleClick' is assigned a value but never used.","'len' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'IconButton' is defined but never used.","'CloseIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},"Update the dependencies array to be: [loadData, pageCount]",{"range":"249","text":"250"},[2989,2991],"[loadData, pageCount]"]